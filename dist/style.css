*,
*::before,
*::after  {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

:root {
  --astro-light-background: #f1f5f9;
  --github-dark-background: #0d1016;

  --light-gray: rgb(123, 123, 123);
  --light-blue: #8dbafff0;
  --translucent-white: rgba(255, 255, 255, 0.7);

  --normal-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  --blur-filter: blur(8px);

  --orange-500: hwb(27 21% 7%);
}

html,
body {
  background-color: var(--astro-light-background);
}

header {
  color: var(--light-gray);
  padding: 1rem;
  display: flex;
  align-items: center;
  border-bottom: 1px solid gray;
}

header *:last-child {
  margin-left: auto;
  color: var(--light-blue);
}

h2 {
  font-size: 1rem;
}

h3 {
  font-weight: 400;
  font-size: 0.8rem;
}

a {
  text-decoration: none;
}

.overflow-hidden {
  overflow: hidden;
}

.bottom {
  bottom: 1.5rem;
}

.spinning {
  animation: logo-spin 8s infinite 0s cubic-bezier(0.38, 0.01, 0, 0.99);
}

@keyframes logo-spin {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(90deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(270deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.logo {
  width: 2rem;
  height: 2rem;
  margin: 0 1rem;
  transition: all 0.3s ease 0s;
}

/* Buttons From uiverse.io */
.button {
  padding: 0.7rem;
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 2.5px;
  font-weight: 500;
  color: #000;
  background: var(--translucent-white);
  backdrop-filter: var(--blur-filter);
  border: none;
  border-radius: 3rem;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease 0s;
  cursor: pointer;
  outline: none;
  display: flex;
  align-items: center;
  width: fit-content;
}

.button:hover {
  background-color: var(--light-blue);
  box-shadow: 0px 15px 20px rgba(46, 104, 229, 0.4);
  color: #fff;
  fill: #fff;
  transform: translateY(-4px);
}

.button:active {
  transform: translateY(-1px);
}

/* Home page cards. From uiverse.io by @fanishah */
.project-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.card {
  margin: 1rem;
  min-width: 10rem;
  max-width: 20rem;
  height: 15rem;
  background-color: #ffffff;
  border-radius: 1rem;
  transition: all 0.15s ease-in;
  box-shadow: var(--normal-shadow);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.card * {
  margin: 0.5rem 0;
}

.card svg {
  fill: var(--light-gray);
  width: 2.5rem;
  height: 2.5rem;
}

.card .button {
  padding: 1rem;
}

.card:hover {
  transform: translateY(-0.5rem);
  border: var(--light-blue) 0.1em solid;
  border-radius: 2.5rem 0 2.5rem 0;
  cursor: pointer;
}

.card:hover svg,
.card:hover h2 {
  fill: var(--light-blue);
  color: var(--light-blue);
}

/* Viewer and tools */
.viewer {
  position: absolute;
  height: 100%;
  width: 100%;
  outline: none;
}

/* Model title & toolbar cards. From uiverse.io by @adamgiebl */
.simple-card-container {
  display: flex;
  justify-content: center;
  position: absolute;
  width: 100%;
}

.simple-card {
  margin: 1rem;
  z-index: 1;
  padding: 0.75rem 2.5rem;
  border-radius: 1rem;
  background: var(--translucent-white);
  box-shadow: var(--normal-shadow);
  backdrop-filter: var(--blur-filter);
  text-align: center;
}

.toolbar {
  display: flex;
  flex-direction: row;
}

.toolbar .button {
  margin: 0 0.5rem;
}


/* File input */
.file-input {
  opacity: 0;
  pointer-events: none;
  position: absolute;
}

/* Dropdown */
.dropdown-container {
  position: relative;
}

.dropdown-checkbox:checked,
.dropdown-checkbox:not(:checked) {
  opacity: 0;
  pointer-events: none;
  position: absolute;
}

/* add a fixed position pseudo-element to the labels that stretches across the 
entire page, effectively creating a background overlay. The pointer-events 
property is set to "none", to prevent the user from clicking on the 
pseudo-element, but is set to "auto" for the checked label to allow the user to 
click outside of the dropdown menu to close it. */
.dropdown-checkbox:checked:before,
.dropdown-checkbox:not(:checked):before {
  position: fixed;
  top: 0;
  left: 0;
  content: "";
  width: 100vw;
  height: 100vh;
  z-index: -1;
  cursor: auto;
  pointer-events: none;
}
.dropdown-checkbox:checked:before {
  pointer-events: auto;
}

.dropdown-checkbox:checked ~ .dropdown-section {
  opacity: 1;
  pointer-events: auto;
  transform: translateY(0);
}

.dropdown-section {
  position: absolute;
  bottom: 1.8rem;
  left: -0.5rem;
  display: block;
  z-index: 2;
  width: max-content;
  /* Invisible by default */
  opacity: 0;
  pointer-events: none;
  transform: translateY(-1.5rem);
  transition: all 200ms linear;
}

.dropdown-container .dropdown-section {
  padding: 0.5rem 0.75rem;
  text-align: left;
}


/* glTF loading screen */
#loader-container {
  position: fixed;
  background-color: black;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  color: white;
}

/* From uiverse.io by @barisdogansutcu */
.loading-svg {
  margin: 1rem;
  width: 3.25em;
  transform-origin: center;
  animation: rotate4 2s linear infinite;
}

.loading-circle {
  fill: none;
  stroke: hsl(214, 97%, 59%);
  stroke-width: 2;
  stroke-dasharray: 1, 200;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  animation: dash4 1.5s ease-in-out infinite;
}

@keyframes rotate4 {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash4 {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dashoffset: -125px;
  }
}


/* WIP */
.wip {
  pointer-events: none;
  filter: opacity(50%);
}
